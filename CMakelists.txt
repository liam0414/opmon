cmake_minimum_required(VERSION 3.16)
project(OnePieceGame VERSION 1.0.0)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# Build type
if(NOT CMAKE_BUILD_TYPE)
    set(CMAKE_BUILD_TYPE Release)
endif()

# Compiler flags
set(CMAKE_CXX_FLAGS_DEBUG "-g -O0 -Wall -Wextra")
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG")

# ============= SFML =============
set(SFML_ROOT "${CMAKE_CURRENT_SOURCE_DIR}/libs/SFML")
find_library(SFML_SYSTEM_LIB sfml-system PATHS ${SFML_ROOT}/lib)
find_library(SFML_WINDOW_LIB sfml-window PATHS ${SFML_ROOT}/lib)
find_library(SFML_GRAPHICS_LIB sfml-graphics PATHS ${SFML_ROOT}/lib)
find_library(SFML_AUDIO_LIB sfml-audio PATHS ${SFML_ROOT}/lib)

# ============= spdlog =============
add_subdirectory(libs/spdlog)

# ============= Dear ImGui =============
set(IMGUI_DIR ${CMAKE_CURRENT_SOURCE_DIR}/libs/imgui)
set(IMGUI_SOURCES
    ${IMGUI_DIR}/imgui.cpp
    ${IMGUI_DIR}/imgui_demo.cpp
    ${IMGUI_DIR}/imgui_draw.cpp
    ${IMGUI_DIR}/imgui_tables.cpp
    ${IMGUI_DIR}/imgui_widgets.cpp
    ${IMGUI_DIR}/backends/imgui_impl_opengl3.cpp
    ${IMGUI_DIR}/backends/imgui_impl_sfml.cpp
)

# ============= Include directories =============
include_directories(
    ${SFML_ROOT}/include
    ${CMAKE_CURRENT_SOURCE_DIR}/libs/nlohmann
    ${CMAKE_CURRENT_SOURCE_DIR}/libs/stb
    ${IMGUI_DIR}
    ${IMGUI_DIR}/backends
    src/
)

# ============= Source files =============
file(GLOB_RECURSE GAME_SOURCES 
    "src/*.cpp" 
    "src/*.h"
)

# ============= Create executable =============
add_executable(${PROJECT_NAME} 
    ${GAME_SOURCES}
    ${IMGUI_SOURCES}
)

# ============= Link libraries =============
target_link_libraries(${PROJECT_NAME}
    ${SFML_SYSTEM_LIB}
    ${SFML_WINDOW_LIB}
    ${SFML_GRAPHICS_LIB}
    ${SFML_AUDIO_LIB}
    spdlog::spdlog
    GL  # For OpenGL (needed by ImGui)
)

# ============= Copy SFML libraries to build directory =============
file(GLOB SFML_LIBS "${SFML_ROOT}/lib/*.so*")
foreach(LIB ${SFML_LIBS})
    file(COPY ${LIB} DESTINATION ${CMAKE_CURRENT_BINARY_DIR})
endforeach()

# Copy assets
file(COPY assets DESTINATION ${CMAKE_CURRENT_BINARY_DIR})